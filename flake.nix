# This flake was initially generated by fh, the CLI for FlakeHub (version 0.1.25)
{

  # Flake inputs
  inputs = {
    flake-schemas.url = "https://flakehub.com/f/DeterminateSystems/flake-schemas/*";

    nixpkgs.url = "https://flakehub.com/f/NixOS/nixpkgs/*";
  };

  # Flake outputs that other flakes can use
  outputs =
    {
      self,
      flake-schemas,
      nixpkgs,
      ...
    }:
    let
      # Helpers for producing system-specific outputs
      supportedSystems = [
        "x86_64-linux"
        "aarch64-darwin"
        "x86_64-darwin"
        "aarch64-linux"
      ];
      forEachSupportedSystem =
        f:
        nixpkgs.lib.genAttrs supportedSystems (
          system:
          f {
            pkgs = import nixpkgs { inherit system; };
          }
        );
    in
    {
      # Schemas tell Nix about the structure of your flake's outputs
      schemas = flake-schemas.schemas;

      # Development environments
      devShells = forEachSupportedSystem (
        { pkgs }:
        {
          default = pkgs.mkShell {
            # Pinned packages available in the environment
            packages = with pkgs; [
              (with pkgs.python313Packages; [
                python
                evdev
                ty
                black
                isort
              ])
              nil
              self.outputs.packages.${pkgs.system}.default
            ];
          };
        }
      );

      packages = forEachSupportedSystem (
        { pkgs }:
        {
          default = pkgs.python313Packages.buildPythonApplication {
            pname = "apestoso-perezoso";
            version = "0.1.0";

            src = builtins.path {
              path = ./.;
              name = "fuente";
            };

            propagatedBuildInputs = with pkgs.python313Packages; [
              evdev
            ];

            installPhase = ''
              mkdir -p $out/bin
              cp ${./grabar.py} $out/bin/apestoso
              cp ${./reproducir.py} $out/bin/peresozo
              chmod +x $out/bin/apestoso $out/bin/peresozo
            '';
          };
        }
      );
    };
}
